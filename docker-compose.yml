version: '3'

services:
  # Store data efficiently in encrypted blocks
  database:
    build:
      context: .
      dockerfile: Dockerfile.database
    working_dir: /work
    command: /usr/local/bin/rest-server --no-auth --append-only --path /usr/local/data
    environment:
      - REDIS_HOST=upstream
      - REDIS_PORT=6379
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    depends_on:
      - upstream
    volumes:
      - ./bin:/usr/local/bin
      - /Volumes/y00000001:/work
      - /Volumes/y00000001/nitflix:/usr/local/data


  # Download json for url and thumbnail for presentation
  # Maybe alows for selective enqueue since some videos witll be not good
  collection:
    image: ruby
    working_dir: /work
    volumes:
      - .:/work
      - bundle:/usr/local/bundle
  #   depends_on:
  #     - queue
  # Download videos and print status updates to condole
  thumbnail:
    build:
      context: .
      dockerfile: Dockerfile.youtube-dl
    command: youtube-dl --write-thumbnail "ytsearch:$VIDEO_TITLE"
    working_dir: /work
    environment:
      - COURSE_HREF=${COURSE_HREF}
      - VIDEO_TITLE=${VIDEO_TITLE}
    volumes:
      - thumbnails:/work
  upstream:
    image: redis
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    ports:
      - 6379:6379
    volumes:
      - cache:/data
  queue:
    build:
      context: .
      dockerfile: Dockerfile.youtube-dl
    command: youtube-dl "ytsearch:$VIDEO_TITLE" --match-filter "channel = 'MIT OpenCourseWare'" --exec 'restic backup {} --tag $COURSE_HREF && rm {}'
    working_dir: /work
    environment:
      - REDIS_HOST=upstream
      - REDIS_PORT=6379
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      - RESTIC_REPOSITORY=rest:http://database:8000
      - RESTIC_PASSWORD=test
      - COURSE_HREF=${COURSE_HREF}
      - VIDEO_TITLE=${VIDEO_TITLE}
    volumes:
      - /Volumes/y00000001:/work
    depends_on:
      - database
      - upstream
  subtitles:
    build:
      context: .
      dockerfile: Dockerfile.youtube-dl
    command: youtube-dl --skip-download --write-auto-sub --sub-lang $LANGUAGES "ytsearch:$VIDEO_TITLE" #--exec 'restic backup {} --tag $COURSE_HREF && rm {}'
    working_dir: /usr/local/work
    environment:
      - LANGUAGES=en,nl,de,ru,es,fr
      - VIDEO_TITLE=${VIDEO_TITLE}
    volumes:
      - subtitles:/usr/local/work

volumes:
  subtitles: {}
  thumbnails: {}
  bundle: {}
  cache: {}
